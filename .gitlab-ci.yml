# Is performed before the scripts in the stages step
before_script:
  - git submodule init
  - git submodule foreach git reset --hard
  - git submodule update
  - export OMP_PROC_BIND=close
  - export OMP_PLACES=cores
  - export OMP_NUM_THREADS=1
  - export CMAKE_VERSION=3.19.6
  - export CTEST_OUTPUT_ON_FAILURE=1
  - export J=4 && echo Using ${J} cores during build
  - wget -qO- http://www.cmake.org/files/v${CMAKE_VERSION:0:4}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz | tar -xz
  - export PATH=${PWD}/cmake-${CMAKE_VERSION}-Linux-x86_64/bin:$PATH
  - export HDF5_VER=1.10.7
  - export OMPI_VER=4.1.0
  - export OMPI_DIR=$(pwd)/local/openmpi-${OMPI_VER}
  - export OPAL_PREFIX=$(pwd)/local/openmpi-${OMPI_VER}
  - export PATH=${OMPI_DIR}/bin:$PATH
  - export LD_LIBRARY_PATH=${OMPI_DIR}/lib:$LD_LIBRARY_PATH
  - export KOKKOS_NUM_DEVICES=1
  - export CUDA_VISIBLE_DEVICES=0
# trying to use a less frequently used GPU on the node
  - module load anaconda3/2020.02
  # required as functions like "activate" are not available in subshells, see
  # see https://github.com/conda/conda/issues/7980
  - source /opt/sns/anaconda3/2020.02/etc/profile.d/conda.sh
  - module load gcc/7.3.0 cudatoolkit/11.1 hdf5/gcc/1.10.0
  - pip install --user unyt
  - HDF5_DIR=$HDF5DIR pip install --user --no-binary=h5py --ignore-installed h5py


cache:
  key: global-1
  paths:
    - external/parthenon/tst/regression/gold_standard/
    - local/

stages:
  - prep
  - regression


prep-cuda:
  stage: prep
  tags:
    - gpu
    - springdale7
  script:
    - module load gcc/7.3.0 cudatoolkit/11.1
    - if [ ! -d ./local/openmpi-${OMPI_VER} ]; then
      mkdir -p ./local/openmpi-${OMPI_VER};
      wget https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-${OMPI_VER}.tar.bz2;
      tar xjf openmpi-${OMPI_VER}.tar.bz2;
      cd openmpi-${OMPI_VER};
      ./configure --prefix=${PWD}/../local/openmpi-${OMPI_VER} --disable-mpi-fortran --with-cuda --without-ucx --without-ofi && make all install;
      cd ..;
      fi
    - if [ ! -d local/hdf5-${HDF5_VER}-gcc ]; then
      wget https://hdf-wordpress-1.s3.amazonaws.com/wp-content/uploads/manual/HDF5/HDF5_1_10_7/src/hdf5-${HDF5_VER}.tar.bz2;
      tar xjf hdf5-${HDF5_VER}.tar.bz2;
      mkdir -p ./local/hdf5-${HDF5_VER}-gcc/parallel;
      cd hdf5-${HDF5_VER};
      CC=mpicc ./configure --prefix=${PWD}/../local/hdf5-${HDF5_VER}-gcc/parallel --enable-parallel && make -j8 && make install && make clean;
      fi

cuda-regression:
  tags:
    - gpu
    - springdale7
  stage: regression
  script:
#    - module load openmpi/cuda-10.2/gcc/4.0.3/64 gcc/7.3.0 cudatoolkit/10.2
    - module load gcc/7.3.0 cudatoolkit/11.1 hdf5/gcc/1.10.0
    - mkdir build-cuda
    - cd build-cuda
    - cmake
      -DKokkos_ARCH_SKX=True
      -DKokkos_ENABLE_CUDA=True -DKokkos_ARCH_VOLTA70=True
      -DCMAKE_CXX_COMPILER=${PWD}/../external/Kokkos/bin/nvcc_wrapper
      -DPARTHENON_DISABLE_MPI=ON
      ../
    - make -j${J} athenaPK
    - nvidia-smi
    - ctest
  artifacts:
    when: always
    expire_in: 3 days
    paths:
      - build-cuda/CMakeFiles/CMakeOutput.log
      - build-cuda/tst/regression/outputs/convergence
      - build-cuda/tst/regression/outputs/mhd_convergence
      - build-cuda/tst/regression/outputs/performance
